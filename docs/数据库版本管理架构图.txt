╔═══════════════════════════════════════════════════════════════════════════════╗
║                      数据库版本管理系统架构图                                  ║
╚═══════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────────────────┐
│                              用户交互层                                      │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                             │
│  ┌──────────────┐      ┌──────────────┐      ┌──────────────┐            │
│  │   Makefile   │      │ db_manager.py│      │ 直接使用     │            │
│  │  (快捷命令)   │  or  │  (命令行工具) │  or  │   Alembic    │            │
│  └──────┬───────┘      └──────┬───────┘      └──────┬───────┘            │
│         │                     │                     │                      │
│         └─────────────────────┼─────────────────────┘                      │
│                               │                                            │
└───────────────────────────────┼────────────────────────────────────────────┘
                                ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                           Alembic 核心层                                     │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                             │
│  ┌──────────────────────────────────────────────────────────────────────┐  │
│  │                         alembic.ini                                  │  │
│  │                      (主配置文件)                                     │  │
│  └──────────────────────────────────────────────────────────────────────┘  │
│                                                                             │
│  ┌──────────────────────────────────────────────────────────────────────┐  │
│  │                       alembic/env.py                                 │  │
│  │                    (环境配置和模型导入)                               │  │
│  │   - 加载 SQLAlchemy Base                                             │  │
│  │   - 配置数据库连接                                                    │  │
│  │   - 设置自动检测规则                                                  │  │
│  └──────────────────────────────────────────────────────────────────────┘  │
│                                                                             │
│  ┌──────────────────────────────────────────────────────────────────────┐  │
│  │                   alembic/script.py.mako                             │  │
│  │                     (迁移脚本模板)                                    │  │
│  └──────────────────────────────────────────────────────────────────────┘  │
│                                                                             │
│  ┌──────────────────────────────────────────────────────────────────────┐  │
│  │                    alembic/versions/                                 │  │
│  │                     (迁移脚本存储)                                    │  │
│  │   ├─ 001_initial_schema.py        (初始结构)                         │  │
│  │   ├─ 002_add_email_field.py       (添加字段)                         │  │
│  │   ├─ 003_create_new_table.py      (创建表)                           │  │
│  │   └─ ...                           (更多迁移)                         │  │
│  └──────────────────────────────────────────────────────────────────────┘  │
│                                                                             │
└───────────────────────────────┬─────────────────────────────────────────────┘
                                ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                           SQLAlchemy ORM 层                                  │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                             │
│  ┌──────────────────────────────────────────────────────────────────────┐  │
│  │                     backend/database.py                              │  │
│  │                      (模型定义层)                                     │  │
│  │                                                                      │  │
│  │   ┌──────────────┐  ┌──────────────┐  ┌──────────────┐            │  │
│  │   │    User      │  │ChatSession   │  │ChatMessage   │  ...       │  │
│  │   └──────────────┘  └──────────────┘  └──────────────┘            │  │
│  │   ┌──────────────┐  ┌──────────────┐  ┌──────────────┐            │  │
│  │   │EmotionAnalysis│ │  Knowledge   │  │ UserFeedback │  ...       │  │
│  │   └──────────────┘  └──────────────┘  └──────────────┘            │  │
│  │                                                                      │  │
│  └──────────────────────────────────────────────────────────────────────┘  │
│                                                                             │
└───────────────────────────────┬─────────────────────────────────────────────┘
                                ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                            数据库驱动层                                      │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                             │
│  ┌──────────────────────────────────────────────────────────────────────┐  │
│  │                         PyMySQL                                      │  │
│  │                    (MySQL Python 驱动)                               │  │
│  └──────────────────────────────────────────────────────────────────────┘  │
│                                                                             │
└───────────────────────────────┬─────────────────────────────────────────────┘
                                ▼
┌─────────────────────────────────────────────────────────────────────────────┐
│                           MySQL 数据库                                       │
├─────────────────────────────────────────────────────────────────────────────┤
│                                                                             │
│  ┌────────────────────────────────────────────────────────────┐            │
│  │                emotional_chat (数据库)                     │            │
│  ├────────────────────────────────────────────────────────────┤            │
│  │  📋 alembic_version         (版本追踪表)                   │            │
│  │  👤 users                    (用户表)                      │            │
│  │  💬 chat_sessions            (会话表)                      │            │
│  │  📝 chat_messages            (消息表)                      │            │
│  │  😊 emotion_analysis         (情感分析表)                  │            │
│  │  📚 knowledge                (知识库表)                    │            │
│  │  📊 system_logs              (系统日志表)                  │            │
│  │  ⭐ user_feedback            (用户反馈表)                  │            │
│  └────────────────────────────────────────────────────────────┘            │
│                                                                             │
└─────────────────────────────────────────────────────────────────────────────┘


╔═══════════════════════════════════════════════════════════════════════════════╗
║                              工作流程图                                        ║
╚═══════════════════════════════════════════════════════════════════════════════╝

                         开发流程
                            │
                            ▼
        ┌───────────────────────────────────────┐
        │  1. 修改 backend/database.py         │
        │     (添加/修改 SQLAlchemy 模型)      │
        └─────────────┬─────────────────────────┘
                      │
                      ▼
        ┌───────────────────────────────────────┐
        │  2. 生成迁移脚本                      │
        │     python db_manager.py revision     │
        │     -m "描述变更"                     │
        └─────────────┬─────────────────────────┘
                      │
                      ▼
        ┌───────────────────────────────────────┐
        │  3. 检查生成的迁移脚本                │
        │     (alembic/versions/xxx.py)         │
        └─────────────┬─────────────────────────┘
                      │
                      ▼
        ┌───────────────────────────────────────┐
        │  4. 应用迁移                          │
        │     python db_manager.py upgrade      │
        └─────────────┬─────────────────────────┘
                      │
                      ▼
        ┌───────────────────────────────────────┐
        │  5. 测试变更                          │
        └─────────────┬─────────────────────────┘
                      │
                      ▼
        ┌───────────────────────────────────────┐
        │  6. 提交到 Git                        │
        │     git add alembic/versions/xxx.py   │
        │     git add backend/database.py       │
        │     git commit -m "..."               │
        └───────────────────────────────────────┘


╔═══════════════════════════════════════════════════════════════════════════════╗
║                              命令流程图                                        ║
╚═══════════════════════════════════════════════════════════════════════════════╝

    用户命令
        │
        ▼
    ┌───────────────────────┐
    │  make db-init         │────────┐
    │  或                    │        │
    │  python db_manager.py │        │
    │  init                 │        │
    └───────────────────────┘        │
                                     ▼
    ┌────────────────────────────────────────────┐
    │  DatabaseManager 类                        │
    │  (db_manager.py)                           │
    │                                            │
    │  ├─ check_connection()  → 检查连接         │
    │  ├─ create_database()   → 创建数据库       │
    │  ├─ init_db()           → 初始化           │
    │  ├─ upgrade()           → 升级版本         │
    │  ├─ downgrade()         → 降级版本         │
    │  ├─ current()           → 查看当前版本     │
    │  ├─ history()           → 查看历史         │
    │  ├─ revision()          → 创建迁移         │
    │  └─ stamp()             → 标记版本         │
    └─────────────┬──────────────────────────────┘
                  │
                  ▼
    ┌────────────────────────────────────────────┐
    │  Alembic Command API                       │
    │                                            │
    │  ├─ command.upgrade(cfg, 'head')           │
    │  ├─ command.downgrade(cfg, '-1')           │
    │  ├─ command.current(cfg)                   │
    │  ├─ command.history(cfg)                   │
    │  ├─ command.revision(cfg, msg, auto=True)  │
    │  └─ command.stamp(cfg, revision)           │
    └─────────────┬──────────────────────────────┘
                  │
                  ▼
    ┌────────────────────────────────────────────┐
    │  执行 SQL 操作                              │
    │                                            │
    │  CREATE TABLE ...                          │
    │  ALTER TABLE ...                           │
    │  DROP TABLE ...                            │
    │  INSERT INTO alembic_version ...           │
    └─────────────┬──────────────────────────────┘
                  │
                  ▼
              MySQL 数据库


╔═══════════════════════════════════════════════════════════════════════════════╗
║                           文档结构图                                           ║
╚═══════════════════════════════════════════════════════════════════════════════╝

docs/
├── 📘 数据库版本管理.md
│   ├── 概述和基本概念
│   ├── 快速开始指南
│   ├── 常用命令详解
│   ├── 迁移工作流
│   ├── 高级用法
│   ├── 最佳实践
│   └── 故障排查
│
├── 📝 数据库迁移快速参考.md
│   ├── 快速命令列表
│   ├── 工作流程概要
│   ├── 注意事项
│   └── 常见问题快速解答
│
├── 📖 DATABASE_MIGRATION_README.md
│   ├── 系统概述
│   ├── 快速开始
│   ├── 项目结构说明
│   ├── 核心文件介绍
│   ├── 最佳实践
│   └── 常见问题
│
├── 💡 数据库迁移示例.md
│   ├── 示例1: 首次部署
│   ├── 示例2: 添加新字段
│   ├── 示例3: 创建新表
│   ├── 示例4: 修改字段类型
│   ├── 示例5: 数据迁移
│   ├── 示例6: 回滚迁移
│   ├── 示例7: 生产环境部署
│   ├── 示例8: 处理迁移冲突
│   ├── 示例9: 重置数据库
│   └── 示例10: 使用Makefile
│
└── 🔧 gitignore_数据库迁移.txt
    └── Git版本控制建议


推荐阅读顺序：
1️⃣ 新手入门    → DATABASE_MIGRATION_README.md
2️⃣ 快速上手    → 数据库迁移快速参考.md
3️⃣ 实战练习    → 数据库迁移示例.md
4️⃣ 深入学习    → 数据库版本管理.md


╔═══════════════════════════════════════════════════════════════════════════════╗
║                           技术栈说明                                           ║
╚═══════════════════════════════════════════════════════════════════════════════╝

┌─────────────────────┬──────────────┬─────────────────────────────────────────┐
│      组件           │    版本      │           作用                          │
├─────────────────────┼──────────────┼─────────────────────────────────────────┤
│ Alembic             │   1.12.1     │ 数据库迁移和版本管理工具                │
│ SQLAlchemy          │   1.4.53     │ Python SQL 工具包和 ORM                 │
│ PyMySQL             │   1.0.2      │ Python MySQL 数据库驱动                 │
│ MySQL               │   5.7+       │ 关系型数据库                            │
│ Python              │   3.7+       │ 编程语言                                │
└─────────────────────┴──────────────┴─────────────────────────────────────────┘


╔═══════════════════════════════════════════════════════════════════════════════╗
║                           快速命令参考                                         ║
╚═══════════════════════════════════════════════════════════════════════════════╝

常用命令：
  ▶ python db_manager.py init           # 初始化数据库
  ▶ python db_manager.py check          # 检查数据库连接
  ▶ python db_manager.py current        # 查看当前版本
  ▶ python db_manager.py upgrade        # 升级到最新版本
  ▶ python db_manager.py history        # 查看迁移历史
  ▶ python db_manager.py revision -m "msg"  # 创建新迁移

Makefile 快捷方式：
  ▶ make db-init                        # 初始化数据库
  ▶ make db-check                       # 检查连接
  ▶ make db-current                     # 查看版本
  ▶ make db-upgrade                     # 升级数据库
  ▶ make db-history                     # 查看历史


═══════════════════════════════════════════════════════════════════════════════
                    数据库版本管理系统 v1.0.0
                      创建日期: 2025-10-14
═══════════════════════════════════════════════════════════════════════════════

