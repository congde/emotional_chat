{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8008';\nclass ChatAPI {\n  static async sendMessage(data) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/chat`, data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('发送消息失败:', error);\n      throw error;\n    }\n  }\n  static async getSessionHistory(sessionId, limit = 20) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/sessions/${sessionId}/history`, {\n        params: {\n          limit\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('获取会话历史失败:', error);\n      throw error;\n    }\n  }\n  static async getSessionSummary(sessionId) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/sessions/${sessionId}/summary`);\n      return response.data;\n    } catch (error) {\n      console.error('获取会话摘要失败:', error);\n      throw error;\n    }\n  }\n  static async addKnowledge(text, category = 'general') {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/knowledge`, {\n        text,\n        category\n      });\n      return response.data;\n    } catch (error) {\n      console.error('添加知识失败:', error);\n      throw error;\n    }\n  }\n  static async addEmotionExample(text, emotion, intensity) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/emotion-examples`, {\n        text,\n        emotion,\n        intensity\n      });\n      return response.data;\n    } catch (error) {\n      console.error('添加情感示例失败:', error);\n      throw error;\n    }\n  }\n  static async healthCheck() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/health`);\n      return response.data;\n    } catch (error) {\n      console.error('健康检查失败:', error);\n      throw error;\n    }\n  }\n}\nexport default ChatAPI;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","ChatAPI","sendMessage","data","response","post","headers","error","console","getSessionHistory","sessionId","limit","get","params","getSessionSummary","addKnowledge","text","category","addEmotionExample","emotion","intensity","healthCheck"],"sources":["/home/emotional_chat/frontend/src/services/ChatAPI.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8008';\n\nclass ChatAPI {\n  static async sendMessage(data) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/chat`, data, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('发送消息失败:', error);\n      throw error;\n    }\n  }\n\n  static async getSessionHistory(sessionId, limit = 20) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/sessions/${sessionId}/history`, {\n        params: { limit }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('获取会话历史失败:', error);\n      throw error;\n    }\n  }\n\n  static async getSessionSummary(sessionId) {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/sessions/${sessionId}/summary`);\n      return response.data;\n    } catch (error) {\n      console.error('获取会话摘要失败:', error);\n      throw error;\n    }\n  }\n\n  static async addKnowledge(text, category = 'general') {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/knowledge`, {\n        text,\n        category\n      });\n      return response.data;\n    } catch (error) {\n      console.error('添加知识失败:', error);\n      throw error;\n    }\n  }\n\n  static async addEmotionExample(text, emotion, intensity) {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/emotion-examples`, {\n        text,\n        emotion,\n        intensity\n      });\n      return response.data;\n    } catch (error) {\n      console.error('添加情感示例失败:', error);\n      throw error;\n    }\n  }\n\n  static async healthCheck() {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/health`);\n      return response.data;\n    } catch (error) {\n      console.error('健康检查失败:', error);\n      throw error;\n    }\n  }\n}\n\nexport default ChatAPI;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,OAAO,CAAC;EACZ,aAAaC,WAAWA,CAACC,IAAI,EAAE;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,YAAY,OAAO,EAAEM,IAAI,EAAE;QAC9DG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,OAAOF,QAAQ,CAACD,IAAI;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/B,MAAMA,KAAK;IACb;EACF;EAEA,aAAaE,iBAAiBA,CAACC,SAAS,EAAEC,KAAK,GAAG,EAAE,EAAE;IACpD,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMR,KAAK,CAACgB,GAAG,CAAC,GAAGf,YAAY,aAAaa,SAAS,UAAU,EAAE;QAChFG,MAAM,EAAE;UAAEF;QAAM;MAClB,CAAC,CAAC;MACF,OAAOP,QAAQ,CAACD,IAAI;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACjC,MAAMA,KAAK;IACb;EACF;EAEA,aAAaO,iBAAiBA,CAACJ,SAAS,EAAE;IACxC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMR,KAAK,CAACgB,GAAG,CAAC,GAAGf,YAAY,aAAaa,SAAS,UAAU,CAAC;MACjF,OAAON,QAAQ,CAACD,IAAI;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACjC,MAAMA,KAAK;IACb;EACF;EAEA,aAAaQ,YAAYA,CAACC,IAAI,EAAEC,QAAQ,GAAG,SAAS,EAAE;IACpD,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,YAAY,YAAY,EAAE;QAC7DmB,IAAI;QACJC;MACF,CAAC,CAAC;MACF,OAAOb,QAAQ,CAACD,IAAI;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/B,MAAMA,KAAK;IACb;EACF;EAEA,aAAaW,iBAAiBA,CAACF,IAAI,EAAEG,OAAO,EAAEC,SAAS,EAAE;IACvD,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,YAAY,mBAAmB,EAAE;QACpEmB,IAAI;QACJG,OAAO;QACPC;MACF,CAAC,CAAC;MACF,OAAOhB,QAAQ,CAACD,IAAI;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACjC,MAAMA,KAAK;IACb;EACF;EAEA,aAAac,WAAWA,CAAA,EAAG;IACzB,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMR,KAAK,CAACgB,GAAG,CAAC,GAAGf,YAAY,SAAS,CAAC;MAC1D,OAAOO,QAAQ,CAACD,IAAI;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/B,MAAMA,KAAK;IACb;EACF;AACF;AAEA,eAAeN,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}